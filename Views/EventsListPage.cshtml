@* @inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    Layout = "Master.cshtml";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">📅 All Events</h2>

    @foreach (var eventItem in Model.Children().Where(x => x.ContentType.Alias == "events"))
    {
        var eventId = eventItem.Id;
        var title = eventItem.Value("title")?.ToString();
        var description = eventItem.Value("description")?.ToString();
        var startDate = eventItem.Value("startDate") as DateTime?;
        var endDate = eventItem.Value("endDate") as DateTime?;
        var location = eventItem.Value("location")?.ToString();
        var eventType = eventItem.Value("eventType")?.ToString();
        bool isActive = endDate.HasValue && endDate.Value > DateTime.Now;

        <div class="card shadow-sm mb-4 border-0 rounded-3">
            <div class="card-body">
                <h4 class="card-title text-primary">@title</h4>

                <p class="mb-2 text-muted"><strong>Type:</strong> @eventType</p>
                <p class="mb-2"><strong>Date:</strong> @startDate?.ToString("yyyy-MM-dd") - @endDate?.ToString("yyyy-MM-dd")</p>
                <p class="mb-2"><strong>Location:</strong> @location</p>

                <div class="mt-3">
                    <strong>Description:</strong>
                    <div>@Html.Raw(description)</div>
                </div>

                <hr />

                @if (TempData["Success"] != null && TempData["SuccessEventId"]?.ToString() == eventId.ToString())
                {
                    <div class="alert alert-success">@TempData["Success"]</div>
                }
                else if (TempData["Failed"] != null && TempData["FailedEventId"]?.ToString() == eventId.ToString())
                {
                    <div class="alert alert-danger">@TempData["Failed"]</div>
                }

                @if (isActive)
                {
                    <form method="post" asp-controller="Registration" asp-action="Submit" class="mt-3">
                        
                        @Html.AntiForgeryToken()

                        @Html.Hidden("EventId", eventId)
                        @Html.Hidden("EventTitle", title)

                        <div class="mb-2">
                            <input class="form-control" type="text" name="Name" placeholder="Your Name" required />
                        </div>
                        <div class="mb-2">
                            <input class="form-control" type="email" name="Email" placeholder="Your Email" required />
                        </div>
                        <button class="btn btn-success" type="submit">Register</button>
                    </form>
                }
                else
                {
                    <div class="alert alert-warning mt-3">
                        Registration is closed for this event.
                    </div>
                }
            </div>
        </div>
    }
</div> *@


@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject EventProject.AppContext.Context context

@{
    Layout = "Master.cshtml";
    int maxAttendees = 200;
}

<div class="container mt-5">
    <h2 class="text-center mb-4">📅 All Events</h2>

    @foreach (var eventItem in Model.Children().Where(x => x.ContentType.Alias == "events"))
    {
        var eventId = eventItem.Id;
        var title = eventItem.Value("title")?.ToString();
        var description = eventItem.Value("description")?.ToString();
        var startDate = eventItem.Value("startDate") as DateTime?;
        var endDate = eventItem.Value("endDate") as DateTime?;
        var location = eventItem.Value("location")?.ToString();
        var eventType = eventItem.Value("eventType")?.ToString();
        bool isActive = endDate.HasValue && endDate.Value > DateTime.Now;

        var attendeeCount = context.eventRegistrations.Count(e => e.EventId == eventId);
        bool isFull = attendeeCount >= maxAttendees;

        <div class="card shadow-sm mb-4 border-0 rounded-3">
            <div class="card-body">
                <h4 class="card-title text-primary">@title</h4>

                <p class="mb-2 text-muted"><strong>Type:</strong> @eventType</p>
                <p class="mb-2"><strong>Date:</strong> @startDate?.ToString("yyyy-MM-dd") - @endDate?.ToString("yyyy-MM-dd")</p>
                <p class="mb-2"><strong>Location:</strong> @location</p>

                <div class="mt-3">
                    <strong>Description:</strong>
                    <div>@Html.Raw(description)</div>
                </div>

                <hr />

                @if (TempData["Success"] != null && TempData["SuccessEventId"]?.ToString() == eventId.ToString())
                {
                    <div class="alert alert-success">@TempData["Success"]</div>
                }
                else if (TempData["Failed"] != null && TempData["FailedEventId"]?.ToString() == eventId.ToString())
                {
                    <div class="alert alert-danger">@TempData["Failed"]</div>
                }

                @if (isActive && !isFull)
                {
                    <form method="post" asp-controller="Registration" asp-action="Submit" class="mt-3">
                        @Html.AntiForgeryToken()

                        @Html.Hidden("EventId", eventId)
                        @Html.Hidden("EventTitle", title)

                        <div class="mb-2">
                            <input class="form-control" type="text" name="Name" placeholder="Your Name" required />
                        </div>
                        <div class="mb-2">
                            <input class="form-control" type="email" name="Email" placeholder="Your Email" required />
                        </div>
                        <button class="btn btn-success" type="submit">Register</button>
                    </form>
                }
                else if (isFull)
                {
                    <div class="alert alert-warning mt-3">
                        Registration is closed for this event. Capacity has been reached.
                    </div>
                }
                else
                {
                    <div class="alert alert-warning mt-3">
                        Registration is closed for this event.
                    </div>
                }
            </div>
        </div>
    }
</div>
